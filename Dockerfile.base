# This Dockerfile is used to setup the environment (JDK, SDK, NDK, just) for Android app building.

FROM debian:bookworm

# Set environment variables for non-interactive installation
ENV DEBIAN_FRONTEND=noninteractive

# Enable multi-arch
RUN dpkg --add-architecture amd64

# Install necessary tools
RUN apt-get update && apt-get install -y \
    curl \
    unzip \
    zip \
    git \
    make \
    build-essential \
    pkg-config \
    openjdk-17-jdk-headless \
    libc6:amd64 \
    zlib1g:amd64 \
    && rm -rf /var/lib/apt/lists/*

# Install just using the official script
RUN curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin

ENV HOME /root

# Set environment variables for Android SDK
ENV ANDROID_HOME /opt/android-sdk
ENV ANDROID_SDK_ROOT /opt/android-sdk
ENV PATH ${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/cmdline-tools/bin:${ANDROID_HOME}/platform-tools:${PATH}

# Download and install Android SDK command-line tools
RUN mkdir -p ${ANDROID_HOME}/cmdline-tools && \
    curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip && \
    unzip sdk-tools.zip -d ${ANDROID_HOME}/cmdline-tools && \
    # The zip extracts to a 'cmdline-tools' directory, so we move its contents up.
    mv ${ANDROID_HOME}/cmdline-tools/cmdline-tools/* ${ANDROID_HOME}/cmdline-tools/ && \
    rm -rf ${ANDROID_HOME}/cmdline-tools/cmdline-tools && \
    rm sdk-tools.zip

# Accept licenses and install SDK components
RUN yes | ${ANDROID_HOME}/cmdline-tools/bin/sdkmanager --sdk_root=${ANDROID_HOME} --licenses && \
    ${ANDROID_HOME}/cmdline-tools/bin/sdkmanager --sdk_root=${ANDROID_HOME} "platform-tools" "platforms;android-35" "build-tools;35.0.0" "ndk;28.1.13356709"

CMD ["bash"]
