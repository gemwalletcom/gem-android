/**
 * Generated by typeshare 1.12.0
 */

package com.wallet.core.primitives

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
enum class NFTType(val string: String) {
	@SerialName("erc721")
	ERC721("erc721"),
	@SerialName("erc1155")
	ERC1155("erc1155"),
	@SerialName("spl")
	SPL("spl"),
	@SerialName("jetton")
	JETTON("jetton"),
}

@Serializable
data class NFTImage (
	val imageUrl: String,
	val previewImageUrl: String,
	val originalSourceUrl: String
)

@Serializable
data class NFTAttribute (
	val name: String,
	val value: String,
	val percentage: Double? = null
)

@Serializable
data class NFTAsset (
	val id: String,
	val collectionId: String,
	val contractAddress: String? = null,
	val tokenId: String,
	val tokenType: NFTType,
	val name: String,
	val description: String? = null,
	val chain: Chain,
	val image: NFTImage,
	val attributes: List<NFTAttribute>
)

@Serializable
data class NFTCollection (
	val id: String,
	val name: String,
	val description: String? = null,
	val chain: Chain,
	val contractAddress: String,
	val image: NFTImage,
	val isVerified: Boolean,
	val links: List<AssetLink>
)

@Serializable
data class NFTAssetData (
	val collection: NFTCollection,
	val asset: NFTAsset
)

@Serializable
data class NFTAssetId (
	val chain: Chain,
	val contractAddress: String,
	val tokenId: String
)

@Serializable
data class NFTData (
	val collection: NFTCollection,
	val assets: List<NFTAsset>
)

