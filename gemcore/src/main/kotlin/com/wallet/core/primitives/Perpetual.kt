/**
 * Generated by typeshare 1.13.2
 */

package com.wallet.core.primitives

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
data class Perpetual (
	val id: String,
	val name: String,
	val provider: PerpetualProvider,
	val assetId: AssetId,
	val identifier: String,
	val price: Double,
	val pricePercentChange24h: Double,
	val openInterest: Double,
	val volume24h: Double,
	val funding: Double,
	val leverage: List<UByte>
)

@Serializable
data class PerpetualBalance (
	val available: Double,
	val reserved: Double,
	val withdrawable: Double
)

@Serializable
data class PerpetualBasic (
	val assetId: AssetId,
	val perpetualId: String,
	val provider: PerpetualProvider
)

@Serializable
enum class PerpetualDirection(val string: String) {
	@SerialName("short")
	Short("short"),
	@SerialName("long")
	Long("long"),
}

@Serializable
data class PerpetualConfirmData (
	val direction: PerpetualDirection,
	val baseAsset: Asset,
	val assetIndex: Int,
	val price: String,
	val fiatValue: Double,
	val size: String
)

@Serializable
data class PerpetualMetadata (
	val isPinned: Boolean
)

@Serializable
data class PerpetualData (
	val perpetual: Perpetual,
	val asset: Asset,
	val metadata: PerpetualMetadata
)

@Serializable
data class PerpetualPositionData (
	val perpetual: Perpetual,
	val asset: Asset,
	val position: PerpetualPosition
)

@Serializable
data class PerpetualPositionsSummary (
	val positions: List<PerpetualPosition>,
	val balance: PerpetualBalance
)

@Serializable
enum class AccountDataType(val string: String) {
	@SerialName("activate")
	Activate("activate"),
}

@Serializable
sealed class PerpetualType {
	@Serializable
	@SerialName("Open")
	data class Open(val content: PerpetualConfirmData): PerpetualType()
	@Serializable
	@SerialName("Close")
	data class Close(val content: PerpetualConfirmData): PerpetualType()
}

