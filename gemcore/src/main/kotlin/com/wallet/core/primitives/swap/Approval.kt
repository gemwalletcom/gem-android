/**
 * Generated by typeshare 1.13.2
 */

package com.wallet.core.primitives.swap

import com.wallet.core.primitives.SwapProvider
import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName

@Serializable
data class ApprovalData (
	val token: String,
	val spender: String,
	val value: String
)

@Serializable
data class QuoteAsset (
	val id: String,
	val symbol: String,
	val decimals: UInt
)

@Serializable
data class SwapProviderData (
	val provider: SwapProvider,
	val name: String,
	val protocolName: String
)

@Serializable
data class SwapQuote (
	val fromValue: String,
	val toValue: String,
	val providerData: SwapProviderData,
	val walletAddress: String,
	val slippageBps: UInt,
	val etaInSeconds: UInt? = null
)

@Serializable
data class SwapQuoteData (
	val to: String,
	val value: String,
	val data: String,
	val approval: ApprovalData? = null,
	val gasLimit: String? = null
)

@Serializable
data class SwapData (
	val quote: SwapQuote,
	val data: SwapQuoteData
)

@Serializable
enum class SwapStatus(val string: String) {
	@SerialName("pending")
	Pending("pending"),
	@SerialName("completed")
	Completed("completed"),
	@SerialName("failed")
	Failed("failed"),
	@SerialName("refunded")
	Refunded("refunded"),
}

