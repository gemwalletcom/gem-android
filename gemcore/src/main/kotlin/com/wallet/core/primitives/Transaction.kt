/**
 * Generated by typeshare 1.13.2
 */

package com.wallet.core.primitives

import kotlinx.serialization.Serializable

@Serializable
data class Transaction (
	val id: String,
	val assetId: AssetId,
	val from: String,
	val to: String,
	val contract: String? = null,
	val type: TransactionType,
	val state: TransactionState,
	val blockNumber: String? = null,
	val sequence: String? = null,
	val fee: String,
	val feeAssetId: AssetId,
	val value: String,
	val memo: String? = null,
	val direction: TransactionDirection,
	val utxoInputs: List<TransactionUtxoInput>? = null,
	val utxoOutputs: List<TransactionUtxoInput>? = null,
	val metadata: String?? = null,
	val createdAt: SerializedDate
)

@Serializable
data class TransactionsFetchOption (
	val wallet_index: Int,
	val asset_id: String? = null,
	val from_timestamp: UInt? = null
)

@Serializable
data class TransactionsResponse (
	val transactions: List<Transaction>,
	val addressNames: List<AddressName>
)

